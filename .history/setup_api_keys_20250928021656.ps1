# Script PowerShell ƒë·ªÉ c·∫•u h√¨nh API Keys cho ·ª©ng d·ª•ng th·ªùi ti·∫øt
# Ch·∫°y script n√†y v·ªõi quy·ªÅn Administrator

Write-Host "=== C·∫§U H√åNH API KEYS CHO ·ª®NG D·ª§NG TH·ªúI TI·∫æT ===" -ForegroundColor Green
Write-Host ""

# Ki·ªÉm tra quy·ªÅn Administrator
if (-NOT ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator")) {
    Write-Host "‚ùå Vui l√≤ng ch·∫°y PowerShell v·ªõi quy·ªÅn Administrator!" -ForegroundColor Red
    Write-Host "Nh·∫•n chu·ªôt ph·∫£i v√†o PowerShell v√† ch·ªçn 'Run as Administrator'" -ForegroundColor Yellow
    Read-Host "Nh·∫•n Enter ƒë·ªÉ tho√°t"
    exit 1
}

Write-Host "‚úÖ ƒêang ch·∫°y v·ªõi quy·ªÅn Administrator" -ForegroundColor Green
Write-Host ""

# H∆∞·ªõng d·∫´n l·∫•y API keys
Write-Host "üìã H∆Ø·ªöNG D·∫™N L·∫§Y API KEYS:" -ForegroundColor Cyan
Write-Host "1. OpenWeather: https://openweathermap.org/api" -ForegroundColor White
Write-Host "2. Google Geocoding: https://console.cloud.google.com/ (t√πy ch·ªçn)" -ForegroundColor White
Write-Host "3. Geoapify: https://www.geoapify.com/ (t√πy ch·ªçn)" -ForegroundColor White
Write-Host "4. Windy: https://www.windy.com/ (t√πy ch·ªçn)" -ForegroundColor White
Write-Host ""

# Nh·∫≠p API keys
Write-Host "üîë NH·∫¨P API KEYS:" -ForegroundColor Cyan

# OpenWeather API Key (b·∫Øt bu·ªôc)
$openweatherKey = Read-Host "OpenWeather API Key (b·∫Øt bu·ªôc)"
if ([string]::IsNullOrWhiteSpace($openweatherKey)) {
    Write-Host "‚ùå OpenWeather API Key kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng!" -ForegroundColor Red
    Read-Host "Nh·∫•n Enter ƒë·ªÉ tho√°t"
    exit 1
}

# Google Geocoding API Key (t√πy ch·ªçn)
$geocodingKey = Read-Host "Google Geocoding API Key (t√πy ch·ªçn, Enter ƒë·ªÉ b·ªè qua)"

# Geoapify API Key (t√πy ch·ªçn)
$geoapifyKey = Read-Host "Geoapify API Key (t√πy ch·ªçn, Enter ƒë·ªÉ b·ªè qua)"

# Windy API Key (t√πy ch·ªçn)
$windyKey = Read-Host "Windy API Key (t√πy ch·ªçn, Enter ƒë·ªÉ b·ªè qua)"

Write-Host ""
Write-Host "‚öôÔ∏è ƒêANG C·∫§U H√åNH ENVIRONMENT VARIABLES..." -ForegroundColor Yellow

try {
    # C·∫•u h√¨nh OpenWeather API Key
    [Environment]::SetEnvironmentVariable("OPENWEATHER_API_KEY", $openweatherKey, "User")
    Write-Host "‚úÖ OPENWEATHER_API_KEY ƒë√£ ƒë∆∞·ª£c c·∫•u h√¨nh" -ForegroundColor Green

    # C·∫•u h√¨nh Google Geocoding API Key (n·∫øu c√≥)
    if (![string]::IsNullOrWhiteSpace($geocodingKey)) {
        [Environment]::SetEnvironmentVariable("GEOCODING_API_KEY", $geocodingKey, "User")
        Write-Host "‚úÖ GEOCODING_API_KEY ƒë√£ ƒë∆∞·ª£c c·∫•u h√¨nh" -ForegroundColor Green
    }

    # C·∫•u h√¨nh Geoapify API Key (n·∫øu c√≥)
    if (![string]::IsNullOrWhiteSpace($geoapifyKey)) {
        [Environment]::SetEnvironmentVariable("GEOAPIFY_API_KEY", $geoapifyKey, "User")
        Write-Host "‚úÖ GEOAPIFY_API_KEY ƒë√£ ƒë∆∞·ª£c c·∫•u h√¨nh" -ForegroundColor Green
    }

    # C·∫•u h√¨nh Windy API Key (n·∫øu c√≥)
    if (![string]::IsNullOrWhiteSpace($windyKey)) {
        [Environment]::SetEnvironmentVariable("WINDY_API_KEY", $windyKey, "User")
        Write-Host "‚úÖ WINDY_API_KEY ƒë√£ ƒë∆∞·ª£c c·∫•u h√¨nh" -ForegroundColor Green
    }

    Write-Host ""
    Write-Host "üéâ C·∫§U H√åNH HO√ÄN T·∫§T!" -ForegroundColor Green
    Write-Host "B√¢y gi·ªù b·∫°n c√≥ th·ªÉ ch·∫°y ·ª©ng d·ª•ng th·ªùi ti·∫øt." -ForegroundColor White
    Write-Host ""
    Write-Host "üí° L∆∞u √Ω: C√≥ th·ªÉ c·∫ßn kh·ªüi ƒë·ªông l·∫°i ·ª©ng d·ª•ng ƒë·ªÉ nh·∫≠n di·ªán Environment Variables m·ªõi." -ForegroundColor Yellow

} catch {
    Write-Host "‚ùå L·ªói khi c·∫•u h√¨nh: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host ""
Read-Host "Nh·∫•n Enter ƒë·ªÉ tho√°t"

